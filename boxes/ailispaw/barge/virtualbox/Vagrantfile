# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# frozen_string_literal: true

VAGRANTFILE_API_VERSION = 2
BOX_ACCOUNT = 'ailispaw'
BOX_ID = 'barge'
BOX_PROVIDER = :virtualbox
BOX_NAME = "#{BOX_ACCOUNT}/#{BOX_ID}-#{BOX_PROVIDER}"
VM_NAME = "#{BOX_ACCOUNT}-#{BOX_ID}-#{BOX_PROVIDER}"
# BOX_URL = ''
CPUS = 1
MEMORY = 1024

# A dummy plugin for Barge to set hostname and network correctly at the very first `vagrant up`
module VagrantPlugins
  module GuestLinux
    class Plugin < Vagrant.plugin('2')
      guest_capability('linux', 'change_host_name') { Cap::ChangeHostName }
      guest_capability('linux', 'configure_networks') { Cap::ConfigureNetworks }
    end
  end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = 'ailispaw/barge'

  config.vm.synced_folder '.', '/vagrant'

  # for NFS synced folder
  # config.vm.network :private_network, ip: '192.168.33.10'
  # config.vm.synced_folder '.', '/vagrant', type: 'nfs', mount_options:
  # ['nolock', 'vers=3', 'udp', 'noatime', 'actimeo=1']

  # for RSync synced folder
  # config.vm.synced_folder '.', '/vagrant', type: 'rsync',
  #   rsync__args: ['--verbose', '--archive', '--delete', '--copy-links']

  config.vm.define VM_NAME do |machine|
    machine.vm.host_name = VM_NAME

    machine.vm.provider BOX_PROVIDER do |domain|
      domain.cpus = CPUS
      domain.memory = MEMORY
    end
  end

  config.vm.provision :docker do |d|
    d.pull_images 'busybox'
    d.run 'simple-echo',
          image: 'busybox',
          args: '-p 8080:8080 -v /usr/bin/dumb-init:/dumb-init:ro --entrypoint=/dumb-init',
          cmd: 'nc -p 8080 -l -l -e echo hello world!'
  end

  config.vm.network :forwarded_port, guest: 80, host: 8080
end
