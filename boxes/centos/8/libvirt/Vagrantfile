# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# frozen_string_literal: true

VAGRANTFILE_API_VERSION = '2'
BOX_ACCOUNT = 'centos'
BOX_ID = '8'
BOX_PROVIDER = :libvirt
BOX_NAME = "#{BOX_ACCOUNT}/#{BOX_ID}-#{BOX_PROVIDER}"
VM_NAME = "#{BOX_ACCOUNT}-#{BOX_ID}-#{BOX_PROVIDER}"
BOX_URL = 'https://cloud.centos.org/centos/8/vagrant/x86_64/images/CentOS-8-Vagrant-8.2.2004-20200611.2.x86_64.vagrant-libvirt.box'
CPUS = 1
MEMORY = 1024

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # If you'd prefer to pull your boxes from Hashicorp's repository, you can
  # replace the config.vm.box and config.vm.box_url declarations with the line below.
  #
  # config.vm.box = "#{BOX_ACCOUNT}/#{BOX_ID}"
  config.vm.box = BOX_NAME
  config.vm.box_url = BOX_URL

  # Forward traffic on the host to the development server on the guest.
  # You can change the host port that is forwarded to 5000 on the guest
  # if you have other services listening on your host's port 80.
  config.vm.network 'forwarded_port', guest: 5000, host: 80

  # This is an optional plugin that, if installed, updates the host's /etc/hosts
  # file with the hostname of the guest VM. In Fedora it is packaged as
  # vagrant-hostmanager
  if Vagrant.has_plugin?('vagrant-hostmanager')
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
  end

  # Vagrant can share the source directory using rsync, NFS, or SSHFS (with the vagrant-sshfs
  # plugin). Consult the Vagrant documentation if you do not want to use SSHFS.
  config.vm.synced_folder '.', '/vagrant', disabled: true
  # config.vm.synced_folder '.', '/home/vagrant/devel', type: 'sshfs', sshfs_opts_append: '-o nonempty'

  # To cache update packages (which is helpful if frequently doing vagrant destroy && vagrant up)
  # you can create a local directory and share it to the guest's DNF cache. Uncomment the lines below
  # to create and use a dnf cache directory
  #
  Dir.mkdir('.dnf-cache') unless File.exist?('.dnf-cache')
  config.vm.synced_folder '.dnf-cache', '/var/cache/dnf', type: 'rsync', sshfs_opts_append: '-o nonempty'

  # Comment this line if you would like to disable the automatic update during provisioning
  config.vm.provision 'shell', inline: 'sudo dnf upgrade -y'

  # bootstrap and run with ansible
  # config.vm.provision 'shell', inline: 'sudo dnf -y install python2-dnf libselinux-python'
  config.vm.provision 'ansible' do |ansible|
    ansible.playbook = 'playbook.yaml'
  end

  config.vm.define VM_NAME do |machine|
    machine.vm.host_name = VM_NAME

    machine.vm.provider BOX_PROVIDER do |domain|
      # Season to taste
      domain.cpus = CPUS
      # domain.graphics_type = 'spice'
      domain.memory = MEMORY
      domain.video_type = 'qxl'

      # Uncomment the following line if you would like to enable libvirt's unsafe cache
      # mode. It is called unsafe for a reason, as it causes the virtual host to ignore all
      # fsync() calls from the guest. Only do this if you are comfortable with the possibility of
      # your development guest becoming corrupted (in which case you should only need to do a
      # vagrant destroy and vagrant up to get a new one).
      #
      domain.volume_cache = 'unsafe'
    end
  end
end
